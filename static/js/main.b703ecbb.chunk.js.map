{"version":3,"sources":["theme.tsx","redux/preferences/actions.ts","components/UserMenu.tsx","services/useCartService.ts","appDatabase.ts","components/CartDrawer.tsx","util/utilz.ts","components/DataTable.tsx","components/NavBar.tsx","constants.ts","components/Landing.tsx","App.tsx","redux/session/reducers.ts","redux/preferences/reducers.ts","redux/index.ts","index.tsx"],"names":["darkTheme","createMuiTheme","palette","type","primary","main","secondary","error","red","A400","lightTheme","DEFAULT_PREFERENCES","dark_mode","set","preferences","isFetching","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","MenuItem","connect","states","preferencesService","dispatch","getPreferences","a","async","Promise","resolve","rject","localStorage","getItem","JSON","parse","setPreferences","setItem","stringify","anchorEl","setAnchorEl","useState","useDarkTheme","setUseDarkTheme","useEffect","id","keepMounted","open","Boolean","onClose","ListItemText","onClick","console","log","prev","style","display","justifyContent","alignItems","Switch","checked","undefined","value","inputProps","db","cart","version","stores","table","Dexie","useCartService","status","result","setResult","toArray","then","line_items","payload","catch","e","on","changes","find","change","getCartItemCount","count","warn","useCartItemCount","itemCount","setItemCount","addToCart","product","line_item","product_id","quantity","total","parseFloat","ws_price","selected_unit","add","removeItemFromCart","index","delete","emptyCart","clear","err","updateLineItem","update","TAX_RATE","useStyles","makeStyles","createStyles","width","overflowX","height","maxWidth","padding","spacing","borderCollapse","qtyinput","usdFormat","num","toFixed","liTotal","u_price","CartTable","classes","invoiceSubtotal","map","reduce","sum","i","invoiceTaxes","invoiceTotal","Paper","className","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","idx","key","IconButton","size","event","fontSize","name","description","pksize","pk","push","join","liPkSize","Select","onChange","unit","handleUnitChange","target","margin","unit_type","TextField","InputLabelProps","shrink","fullWidth","handleQtyChange","min","step","rowSpan","colSpan","length","TableFooter","Button","variant","color","emptyCartAndCloseDrawer","CartDrawer","setOpen","cartResult","Drawer","anchor","window","confirm","API_HOST","PROPERTY_MAP","c","d","f","g","k","l","m","og","r","v","w","ft","n","s","y","1","2","3","withRouter","tableRef","createRef","cartDrawerOpen","setCartDrawerOpen","React","userMenuAnchorEl","setUserMenuAnchorEl","cartAction","icon","Badge","badgeContent","max","tooltip","isFreeAction","userAction","currentTarget","actions","setActions","fetch","response","json","setCategoryLookup","categoryLookup","setSubCategoryLookup","subCategoryLookup","catDefaultFilter","match","params","cat","subCatDefaultFilter","subcat","columns","title","field","lookup","filterPlaceholder","defaultFilter","editComponent","arg","filtering","render","row","CS","EA","codes","split","code","Chip","label","Tooltip","hidden","data","query","reject","method","headers","body","page","totalCount","options","headerStyle","position","top","filterCellStyle","maxBodyHeight","pageSize","pageSizeOptions","debounceInterval","search","emptyRowsWhenPaging","flexGrow","menuButton","marginLeft","breakpoints","up","borderRadius","shape","backgroundColor","fade","common","white","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","NavBar","AppBar","Toolbar","Typography","noWrap","InputBase","placeholder","input","edge","minHeight","flexDirection","crumbz","gridRoot","gridBtn","catHover","textDecoration","cursor","catBtn","overflow","overflowWrap","hyphens","categories","setCategories","selectedCat","setSelectedCat","subCategories","setSubCategories","Object","keys","Fade","in","transitionDelay","toUpperCase","Grid","container","justify","Zoom","item","xs","sm","md","lg","history","subCat","ThemeProvider","CssBaseline","path","exact","component","DataTable","Landing","combineReducers","userService","state","action","user","createStore","session","applyMiddleware","thunk","ReactDOM","store","document","querySelector"],"mappings":"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","file":"static/js/main.b703ecbb.chunk.js","sourcesContent":["import red from '@material-ui/core/colors/red'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#FF4081'\n    },\n    error: {\n      main: red.A400\n    }\n  }\n})\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#FF4081'\n    },\n    error: {\n      main: red.A400\n    }\n  }\n})\nexport { darkTheme, lightTheme }\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\n\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nconst DEFAULT_PREFERENCES: Preferences = {\n  dark_mode: 'false'\n}\n\nexport interface SetAction {\n  type: 'SET_PREFERENCES'\n  preferences: Preferences\n}\nexport interface SetFetcing {\n  type: 'SET_FETCHING_PREFERENCES'\n  isFetching: boolean\n}\nexport interface SetError {\n  type: 'SET_ERROR_PREFERENCES'\n  error: PreferencesError\n}\n\nexport type Action = SetAction | SetFetcing | SetError\n\nexport const set = (preferences: Preferences): SetAction => {\n  return { type: 'SET_PREFERENCES', preferences }\n}\nexport const setError = (error: PreferencesError): SetError => {\n  return { type: 'SET_ERROR_PREFERENCES', error }\n}\nexport const isFetching = (isFetching: boolean): SetFetcing => {\n  return { type: 'SET_FETCHING_PREFERENCES', isFetching }\n}\n\nexport const getPreferences = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve, rject) => {\n      dispatch(isFetching(true))\n\n      const preferences = localStorage && localStorage.getItem('preferences')\n      if (!preferences) {\n        dispatch(set(DEFAULT_PREFERENCES))\n      } else {\n        dispatch(set(JSON.parse(preferences)))\n      }\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n\nexport const setPreferences = (\n  preferences: Preferences\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve, rject) => {\n      dispatch(isFetching(true))\n\n      if (!preferences) {\n        dispatch(set(DEFAULT_PREFERENCES))\n      } else {\n        localStorage &&\n          localStorage.setItem('preferences', JSON.stringify(preferences))\n        dispatch(set(preferences))\n      }\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { withStyles } from '@material-ui/core/styles'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Switch from '@material-ui/core/Switch'\n\nimport { RootState } from '../redux'\nimport { PreferencesServiceProps } from '../redux/preferences/reducers'\nimport { getPreferences, setPreferences } from '../redux/preferences/actions'\nimport { Preferences } from '../types/Preferences'\n\ninterface DispatchProps {\n  getPreferences: () => void\n  setPreferences: (preferences: Preferences) => void\n}\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5'\n  }\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center'\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    // '&:focus': {\n    //   backgroundColor: theme.palette.primary.main,\n    //   '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n    //     color: theme.palette.common.white\n    //   }\n    // }\n  }\n}))(MenuItem)\n\nfunction UserMenu(\n  props: PreferencesServiceProps &\n    DispatchProps & {\n      anchorEl: HTMLElement | null\n      setAnchorEl: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n    }\n) {\n  // const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const {\n    anchorEl,\n    setAnchorEl,\n    preferencesService,\n    getPreferences,\n    setPreferences\n  } = props\n\n  const [useDarkTheme, setUseDarkTheme] = useState<null | boolean>(null)\n\n  useEffect(() => {\n    getPreferences()\n  }, [getPreferences])\n\n  useEffect(() => {\n    if (!preferencesService.isFetching && preferencesService.preferences) {\n      if (useDarkTheme === null) {\n        setUseDarkTheme(\n          preferencesService.preferences.dark_mode === 'true' ? true : false\n        )\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [preferencesService])\n\n  useEffect(() => {\n    if (\n      preferencesService &&\n      preferencesService.preferences &&\n      useDarkTheme !== null &&\n      (preferencesService.preferences.dark_mode === 'true' ? true : false) !==\n        useDarkTheme\n    ) {\n      setPreferences({ dark_mode: useDarkTheme ? 'true' : 'false' })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [useDarkTheme])\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <>\n      <StyledMenu\n        id=\"user--menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"Sign in\"\n            onClick={() => console.log('login')}\n          />\n        </StyledMenuItem>\n\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"Register\"\n            onClick={() => console.log('register')}\n          />\n        </StyledMenuItem>\n\n        <StyledMenuItem>\n          <ListItemText onClick={() => setUseDarkTheme(prev => !prev)}>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              }}\n            >\n              <span>Dark Theme</span>\n              <Switch\n                checked={\n                  useDarkTheme === null || useDarkTheme === undefined\n                    ? false\n                    : useDarkTheme\n                }\n                value=\"useDarkTheme\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            </div>\n          </ListItemText>\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  )\n}\n\nconst mapStateToProps = (states: RootState): PreferencesServiceProps => {\n  return {\n    preferencesService: states.preferences.preferencesService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>\n): DispatchProps => {\n  return {\n    getPreferences: () => dispatch(getPreferences()),\n    setPreferences: (preferences: Preferences) =>\n      dispatch(setPreferences(preferences))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu)\n","import { useEffect, useState } from 'react'\n\nimport { AppDatabase } from '../appDatabase'\nimport { Service } from '../types/Service'\nimport { Cart } from '../types/Cart'\nimport { LineItem, Product } from '../types/Product'\n\nconst db = new AppDatabase()\n\nconst useCartService = () => {\n  const [result, setResult] = useState<Service<Cart>>({\n    status: 'loading'\n  })\n  useEffect(() => {\n    db.cart\n      .toArray()\n      .then(line_items =>\n        setResult({ status: 'loaded', payload: { line_items: line_items } })\n      )\n      .catch(e => {\n        // console.warn('[useCartService] caught error:', e)\n        setResult({ status: 'error', error: e })\n      })\n\n    db.on('changes', changes => {\n      changes.find(change => change.table === 'cart') &&\n        db.cart\n          .toArray()\n          .then(line_items => {\n            console.log('[useCartService] db changes!! ')\n            setResult({ status: 'loaded', payload: { line_items: line_items } })\n          })\n          .catch(e => {\n            // console.warn('[useCartService] caught error:', e)\n            setResult({ status: 'error', error: e })\n          })\n    })\n  }, [])\n\n  return result\n}\n\nconst getCartItemCount = () => {\n  return db.cart.count().catch(e => {\n    console.warn('[useCartItemCount] caught error:', e)\n    return 0\n  })\n}\n\nconst useCartItemCount = () => {\n  const [itemCount, setItemCount] = useState(0)\n\n  useEffect(() => {\n    getCartItemCount().then(count => setItemCount(count))\n\n    db.on('changes', changes => {\n      changes.find(change => change.table === 'cart') &&\n        getCartItemCount().then(count => setItemCount(count))\n    })\n  }, [])\n\n  return itemCount\n}\n\nconst addToCart = (product: Product) => {\n  let line_item: LineItem = {\n    ...product,\n    product_id: product.id,\n    quantity: 1,\n    total: parseFloat(product.ws_price),\n    selected_unit: 'CS'\n  }\n  delete line_item.id // delete id field that moved to product_id so indexDB will auto-increment and so cart items will order correctly.\n\n  db.cart\n    .add(line_item)\n    .catch(error => console.warn('[addToCart] caught error:', error))\n}\n\nconst removeItemFromCart = (index: number) => {\n  db.cart\n    .delete(index)\n    .catch(error => console.warn('[removeItemFromCart] caught error:', error))\n}\n\nconst emptyCart = () => {\n  db.cart.clear().catch(function(err) {\n    console.warn('[emptyCart] caught error:', err)\n  })\n}\n\nconst updateLineItem = (line_item: LineItem) => {\n  db.cart\n    .update(line_item.id, line_item)\n    .catch(error => console.warn('[updateLineItem] caught error:', error))\n}\n\nexport {\n  useCartService,\n  useCartItemCount,\n  addToCart,\n  removeItemFromCart,\n  emptyCart,\n  updateLineItem\n}\n","import Dexie from 'dexie'\nimport 'dexie-observable'\n\nimport { LineItem } from './types/Product'\n\nexport class AppDatabase extends Dexie {\n  cart: Dexie.Table<LineItem, number>\n\n  constructor() {\n    super('SortaCartDatabase')\n    this.version(1).stores({\n      cart: '++id,&product_id'\n    })\n    this.cart = this.table('cart')\n  }\n}\n","import React from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear'\n\nimport {\n  useCartService,\n  emptyCart,\n  updateLineItem,\n  removeItemFromCart\n} from '../services/useCartService'\nimport { LineItem } from '../types/Product'\n\ninterface CartDrawerProps {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst TAX_RATE = 0.07\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      overflowX: 'auto',\n      height: '100%'\n    },\n    table: {\n      maxWidth: '95vw',\n      padding: theme.spacing(1),\n      borderCollapse: 'separate',\n      '& td': {\n        border: 'none'\n      }\n    },\n    qtyinput: {\n      width: '50px'\n    }\n  })\n)\n\nfunction usdFormat(num: number | string) {\n  if (typeof num === 'string') {\n    return `$${parseFloat(num).toFixed(2)}`\n  } else {\n    return `$${num.toFixed(2)}`\n  }\n}\n\nfunction subtotal(items: LineItem[]) {\n  return items.map(({ total }) => total).reduce((sum, i) => sum + i, 0)\n}\n\nfunction liTotal(line_item: LineItem): number {\n  return line_item.selected_unit === 'EA' && line_item.u_price\n    ? line_item.quantity * parseFloat(line_item.u_price)\n    : line_item.quantity * parseFloat(line_item.ws_price)\n}\n\nfunction liPkSize(line_item: LineItem): string {\n  const pksize = []\n  line_item.pk && line_item.pk !== 1 && pksize.push(line_item.pk)\n  line_item.size && pksize.push(line_item.size)\n  return pksize.join(' / ')\n}\n\nfunction CartTable(props: {\n  line_items: LineItem[]\n  emptyCartAndCloseDrawer: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void\n}) {\n  const classes = useStyles()\n\n  const invoiceSubtotal = subtotal(props.line_items)\n  const invoiceTaxes = TAX_RATE * invoiceSubtotal\n  const invoiceTotal = invoiceTaxes + invoiceSubtotal\n\n  const handleUnitChange = (line_item: LineItem, unit: string) => {\n    line_item.selected_unit = unit\n    line_item.total = liTotal(line_item)\n    updateLineItem(line_item)\n  }\n\n  const handleQtyChange = (line_item: LineItem, quantity: number) => {\n    line_item.quantity = quantity > 0 ? quantity : 1\n    line_item.total = liTotal(line_item)\n    updateLineItem(line_item)\n  }\n\n  const removeLineItem = (id: number) => {\n    removeItemFromCart(id)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"cart\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"></TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"center\">Price</TableCell>\n            <TableCell align=\"center\">Unit</TableCell>\n            <TableCell align=\"center\">Qty.</TableCell>\n            <TableCell align=\"center\">Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.line_items.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <IconButton\n                  aria-label=\"delete\"\n                  size=\"small\"\n                  onClick={(event: any) => removeLineItem(line_item.id)}\n                >\n                  <ClearIcon fontSize=\"inherit\" />\n                </IconButton>\n              </TableCell>\n              <TableCell>\n                {line_item.name} {line_item.description}\n              </TableCell>\n              <TableCell align=\"right\">\n                <div>\n                  {line_item.selected_unit === 'EA' && line_item.u_price\n                    ? usdFormat(line_item.u_price)\n                    : usdFormat(line_item.ws_price)}\n                </div>\n                <div>{liPkSize(line_item)}</div>\n              </TableCell>\n              <TableCell align=\"center\">\n                {line_item.u_price &&\n                line_item.u_price !== line_item.ws_price ? (\n                  <Select\n                    value={line_item.selected_unit}\n                    onChange={(event: any) =>\n                      handleUnitChange(line_item, event.target.value)\n                    }\n                    margin=\"dense\"\n                  >\n                    <MenuItem value=\"CS\">Case</MenuItem>\n                    <MenuItem value=\"EA\">Each</MenuItem>\n                  </Select>\n                ) : line_item.unit_type === 'CS' ? (\n                  'Case'\n                ) : (\n                  'Each'\n                )}\n              </TableCell>\n              <TableCell align=\"right\">\n                <TextField\n                  className={classes.qtyinput}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.quantity}\n                  onChange={(event: any) =>\n                    handleQtyChange(line_item, event.target.value)\n                  }\n                  inputProps={{ min: '1', step: '1' }}\n                />\n              </TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell rowSpan={3} colSpan={3} />\n            <TableCell>Subtotal</TableCell>\n            <TableCell align=\"center\">\n              {props.line_items && props.line_items.length}\n            </TableCell>\n            <TableCell align=\"right\">{usdFormat(invoiceSubtotal)}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Tax</TableCell>\n            <TableCell align=\"center\">{`${(TAX_RATE * 100).toFixed(\n              0\n            )} %`}</TableCell>\n            <TableCell align=\"right\">{usdFormat(invoiceTaxes)}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Total</TableCell>\n            <TableCell align=\"right\" colSpan={2}>\n              <b>{usdFormat(invoiceTotal)}</b>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TableCell colSpan={3} align=\"left\">\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={props.emptyCartAndCloseDrawer}\n              >\n                Empty Cart\n              </Button>\n            </TableCell>\n            <TableCell colSpan={3} align=\"right\">\n              <Button variant=\"contained\" color=\"primary\">\n                Checkout\n              </Button>\n            </TableCell>\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </Paper>\n  )\n}\n\nfunction CartDrawer(props: CartDrawerProps) {\n  const { open, setOpen } = props\n  const cartResult = useCartService()\n\n  const emptyCartAndCloseDrawer = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    if (window.confirm('Are you sure?')) {\n      emptyCart()\n      setOpen(false)\n    }\n  }\n\n  return (\n    <Drawer anchor=\"right\" open={open} onClose={() => setOpen(!open)}>\n      {cartResult.status !== 'loaded' && 'Loading...'}\n      {cartResult.status === 'loaded' &&\n        cartResult.payload.line_items.length > 0 && (\n          <CartTable\n            line_items={cartResult.payload.line_items}\n            emptyCartAndCloseDrawer={emptyCartAndCloseDrawer}\n          />\n        )}\n    </Drawer>\n  )\n}\n\nexport default CartDrawer\n","import { PaymentStatus, ShipmentStatus } from '../types/Order'\n\nexport const ORDER_PAYMENT_STATUSES: PaymentStatus[] = [\n  'balance_due',\n  'credit_owed',\n  'failed',\n  'paid',\n  'void'\n]\n\nexport const ORDER_SHIPMENT_STATUSES: ShipmentStatus[] = [\n  'backorder',\n  'canceled',\n  'partial',\n  'pending',\n  'ready',\n  'shipped'\n]\n\nexport function dateMinSec(): string {\n  const date = new Date()\n  return `${date.getMinutes()}${date.getSeconds()}`\n}\n\n// export function tryGetDateTime(id: string) {\n//   try {\n//     return new Date(parseInt(id)).toLocaleString()\n//   } catch (e) {\n//     console.warn('tryGetDateTime caught error:', e)\n//     return ''\n//   }\n// }\n\nexport const API_HOST: string =\n  process.env.NODE_ENV === 'production'\n    ? 'https://api.marshcoop.org'\n    : 'http://localhost:3000'\n","import React, { useState, useEffect, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport MaterialTable, { Action } from 'material-table'\nimport { Chip } from '@material-ui/core'\nimport Badge from '@material-ui/core/Badge'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart'\nimport RemoveShoppingCartIcon from '@material-ui/icons/RemoveShoppingCart'\nimport TagFacesIcon from '@material-ui/icons/TagFaces'\n\nimport UserMenu from './UserMenu'\nimport CartDrawer from './CartDrawer'\nimport { useCartItemCount, addToCart } from '../services/useCartService'\nimport { API_HOST } from '../util/utilz'\n\nconst PROPERTY_MAP: { [index: string]: string } = {\n  a: 'Artificial ingredients',\n  c: 'Low carb',\n  d: 'Dairy free',\n  f: 'Food Service items',\n  g: 'Gluten free',\n  k: 'Kosher',\n  l: 'Low sodium/no salt',\n  m: 'Non-GMO Project Verified',\n  og: 'Organic',\n  r: 'Refined sugar',\n  v: 'Vegan',\n  w: 'Wheat free',\n  ft: 'Fair Trade',\n  n: 'Natural',\n  s: 'Specialty Only',\n  y: 'Yeast free',\n  1: '100% organic',\n  2: '95%+ organic',\n  3: '70%+ organic'\n}\n\nfunction renderCodes(codes: string) {\n  return codes\n    .split(', ')\n    .map((code, idx) =>\n      PROPERTY_MAP[code] ? (\n        <Chip\n          label={PROPERTY_MAP[code]}\n          style={{ margin: 5 }}\n          size=\"small\"\n          key={`pprop${idx}`}\n        />\n      ) : (\n        ''\n      )\n    )\n}\n\nfunction DataTable(\n  props: RouteComponentProps<{ cat?: string; subcat?: string }>\n) {\n  let tableRef = createRef<any>()\n\n  // useEffect(() => {\n  //   // tableRef.current && tableRef.current.onQueryChange()\n  //   // console.log('tableRef.current', tableRef && tableRef.current)\n  // }, [tableRef])\n  const itemCount = useCartItemCount()\n\n  const [cartDrawerOpen, setCartDrawerOpen] = useState(false)\n  const [\n    userMenuAnchorEl,\n    setUserMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null)\n\n  const handleUserMenuClick = (event: React.MouseEvent<HTMLElement>) => {\n    setUserMenuAnchorEl(event.currentTarget)\n  }\n\n  const cartAction = {\n    icon: () => (\n      <Badge badgeContent={itemCount} max={99} color=\"primary\">\n        <ShoppingCartIcon />\n      </Badge>\n    ),\n    tooltip: 'Cart',\n    isFreeAction: true,\n    onClick: () => setCartDrawerOpen(!cartDrawerOpen)\n  }\n\n  const userAction = {\n    icon: () => <TagFacesIcon />,\n    tooltip: 'User',\n    isFreeAction: true,\n    onClick: handleUserMenuClick\n  }\n\n  const [actions, setActions] = useState<Action<any>[]>([userAction])\n\n  useEffect(() => {\n    if (itemCount) {\n      setActions([cartAction, userAction])\n    } else {\n      setActions([userAction])\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [itemCount]) // note: adding 'cartAction' and 'userAction' to dep array is not pleasant :/\n\n  const [categoryLookup, setCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/categories`)\n      .then(response => response.json())\n      .then(result => setCategoryLookup(result))\n      .catch(console.warn)\n  })\n\n  const [subCategoryLookup, setSubCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/sub_categories`)\n      .then(response => response.json())\n      .then(result => setSubCategoryLookup(result))\n      .catch(console.warn)\n  })\n\n  const catDefaultFilter = props.match &&\n    props.match.params &&\n    props.match.params.cat && [props.match.params.cat]\n  const subCatDefaultFilter = props.match &&\n    props.match.params &&\n    props.match.params.subcat && [props.match.params.subcat]\n\n  return (\n    <>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'category',\n            field: 'category',\n            type: 'string',\n            lookup: categoryLookup,\n            filterPlaceholder: 'filter',\n            defaultFilter: catDefaultFilter\n          },\n          {\n            title: 'sub category',\n            field: 'sub_category',\n            type: 'string',\n            lookup: subCategoryLookup,\n            editComponent: arg => {\n              console.log('editComponent arg:', arg)\n              return <>subcat</>\n            },\n            filterPlaceholder: 'filter',\n            defaultFilter: subCatDefaultFilter\n          },\n          {\n            title: 'description',\n            field: 'description',\n            type: 'string',\n            filtering: false,\n            render: row => {\n              if (row.name) {\n                return `${row.name} -- ${row.description}`\n              } else {\n                return row.description\n              }\n            }\n          },\n          {\n            title: 'pk',\n            field: 'pk',\n            type: 'numeric',\n            filtering: false\n          },\n          { title: 'size', field: 'size', type: 'string', filtering: false },\n          {\n            title: 'unit type',\n            field: 'unit_type',\n            type: 'string',\n            lookup: { CS: 'Case', EA: 'Each' },\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'price',\n            field: 'ws_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: 'unit price',\n            field: 'u_price',\n            type: 'currency',\n            filtering: false,\n            render: row =>\n              row.ws_price !== row.u_price ? `$${row.u_price}` : ''\n          },\n          {\n            title: 'properties',\n            field: 'codes',\n            type: 'string',\n            lookup: PROPERTY_MAP,\n            filterPlaceholder: 'filter',\n            render: row => renderCodes(row.codes)\n          },\n          {\n            title: undefined,\n            field: undefined,\n            type: 'string',\n            render: row => {\n              const inCart = true\n              const label = inCart\n                ? 'add to shopping cart'\n                : 'remove from shopping cart'\n              return (\n                <Tooltip aria-label={label} title={label}>\n                  <IconButton color=\"secondary\" onClick={() => addToCart(row)}>\n                    {inCart ? (\n                      <AddShoppingCartIcon />\n                    ) : (\n                      <RemoveShoppingCartIcon />\n                    )}\n                  </IconButton>\n                </Tooltip>\n              )\n            }\n          },\n          { title: 'upc', field: 'upc_code', type: 'string', hidden: true },\n          // { title: 'unf', field: 'unf', type: 'string' },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            console.log('query:', query)\n            fetch(`${API_HOST}/products`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                console.log('result', result)\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"MARSH COOP\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          filterCellStyle: { maxWidth: '132px' },\n          maxBodyHeight: 'calc(100vh - 133px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false\n        }}\n        actions={actions}\n      />\n      <CartDrawer open={cartDrawerOpen} setOpen={setCartDrawerOpen} />\n      <UserMenu anchorEl={userMenuAnchorEl} setAnchorEl={setUserMenuAnchorEl} />\n    </>\n  )\n}\n\nexport default withRouter(DataTable)\n","import React, { useState } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport InputBase from '@material-ui/core/InputBase'\nimport Badge from '@material-ui/core/Badge'\nimport { createStyles, fade, Theme, makeStyles } from '@material-ui/core/styles'\nimport TagFacesIcon from '@material-ui/icons/TagFaces'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\n\nimport UserMenu from './UserMenu'\nimport { useCartItemCount } from '../services/useCartService'\nimport CartDrawer from './CartDrawer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginLeft: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1,\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block'\n      }\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto'\n      }\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    inputRoot: {\n      color: 'inherit'\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: 120,\n        '&:focus': {\n          width: 200\n        }\n      }\n    }\n  })\n)\n\nexport default function NavBar() {\n  const classes = useStyles()\n  const itemCount = useCartItemCount()\n\n  const [cartDrawerOpen, setCartDrawerOpen] = useState(false)\n  const [userMenuAnchorEl, setUserMenuAnchorEl] = useState<null | HTMLElement>(\n    null\n  )\n\n  const handleUserMenuClick = (event: React.MouseEvent<HTMLElement>) => {\n    setUserMenuAnchorEl(event.currentTarget)\n  }\n\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        <Typography className={classes.title} variant=\"h6\" noWrap>\n          MARSH COOP\n        </Typography>\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n          />\n        </div>\n\n        {itemCount > 0 && (\n          <IconButton\n            edge=\"end\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"show cart\"\n            onClick={() => setCartDrawerOpen(prev => !prev)}\n          >\n            <Badge badgeContent={itemCount} max={99} color=\"secondary\">\n              <ShoppingCartIcon />\n            </Badge>\n          </IconButton>\n        )}\n\n        <IconButton\n          edge=\"end\"\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"user menu\"\n          onClick={handleUserMenuClick}\n        >\n          <TagFacesIcon />\n        </IconButton>\n      </Toolbar>\n      <UserMenu anchorEl={userMenuAnchorEl} setAnchorEl={setUserMenuAnchorEl} />\n      <CartDrawer open={cartDrawerOpen} setOpen={setCartDrawerOpen} />\n    </AppBar>\n  )\n}\n","import { Product } from './types/Product'\nimport { User } from './types//User'\nimport { Member } from './types/Member'\n\nexport type PaymentStatus =\n  | 'balance_due'\n  | 'credit_owed'\n  | 'failed'\n  | 'paid'\n  | 'void'\nexport type ShipmentStatus =\n  | 'backorder'\n  | 'canceled'\n  | 'partial'\n  | 'pending'\n  | 'ready'\n  | 'shipped'\nexport type OrderStatus =\n  | 'new'\n  | 'pending'\n  | 'needs_review'\n  | 'void'\n  | 'complete'\n  | 'archived'\n\nexport interface Order {\n  id: number | string\n  status: OrderStatus\n  payment_status: PaymentStatus\n  shipment_status: ShipmentStatus\n  total: number\n  name: string\n  email: string\n  phone: string\n  address?: string\n  notes?: string\n  subtotal?: number\n  item_count: number\n  email_sent?: boolean\n  history?: object\n  createdAt: string\n  updatedAt: string\n  OrderLineItems: LineItem[]\n  UserId?: string\n  User?: User\n  Member?: Member\n}\n\nexport type PartialOrder = Partial<Order>\n\nexport interface OrderRouterProps {\n  id: string\n}\n\nexport interface LineItem {\n  id?: string\n  description: string\n  quantity: number\n  selected_unit?: string\n  price: number\n  total: number\n  kind: string\n  vendor?: string\n  WholesaleOrderId?: number\n  OrderId?: number\n  data?: { product?: Product }\n}\n\nexport const API_HOST: string =\n  process.env.NODE_ENV === 'production'\n    ? 'https://api.marshcoop.org'\n    : 'http://localhost:3000'\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Fade from '@material-ui/core/Fade'\nimport Zoom from '@material-ui/core/Zoom'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\n\nimport NavBar from './NavBar'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      overflowX: 'auto',\n      minHeight: 'calc(100vh - 64px)',\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    crumbz: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    gridRoot: {\n      flexGrow: 1,\n      padding: theme.spacing(2)\n    },\n    gridBtn: {\n      width: '100%',\n      height: '100%'\n    },\n    catHover: {\n      '&:hover': {\n        textDecoration: 'underline',\n        cursor: 'pointer'\n      }\n    },\n    catBtn: {\n      overflow: 'hidden',\n      overflowWrap: 'break-word',\n      hyphens: 'auto'\n    }\n  })\n)\n\nfunction Landing(props: RouteComponentProps) {\n  const classes = useStyles()\n\n  const [categories, setCategories] = useState<string[]>([])\n  const [selectedCat, setSelectedCat] = useState('')\n  const [subCategories, setSubCategories] = useState<\n    { name: string; label: string }[]\n  >([])\n\n  useEffect(() => {\n    fetch(`${API_HOST}/categories`)\n      .then(response => response.json())\n      .then(result => {\n        console.log('result', result)\n        setCategories(Object.keys(result))\n      })\n      .catch(err => {\n        console.warn('onoz, caught err:', err)\n        setCategories([])\n      })\n  }, [setCategories])\n\n  useEffect(() => {\n    fetch(`${API_HOST}/sub_categories`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ categories: [selectedCat] })\n    })\n      .then(response => response.json())\n      .then(result => {\n        console.log('result', result)\n        setSubCategories(\n          Object.keys(result).map(name => ({\n            name,\n            label: name\n              .split(':')\n              .join(': ')\n              .split(',')\n              .join(', ')\n              .split('/')\n              .join(' / ')\n              .split('-')\n              .join(' - ')\n          }))\n        )\n      })\n      .catch(err => {\n        console.warn('onoz, caught err:', err)\n        setSubCategories([])\n      })\n  }, [selectedCat, setSubCategories])\n\n  return (\n    <>\n      <NavBar />\n      <Paper className={classes.root}>\n        <div className={classes.crumbz}>\n          <Button\n            variant=\"text\"\n            size=\"large\"\n            onClick={() => setSelectedCat('')}\n          >\n            <Typography\n              variant=\"h4\"\n              className={selectedCat && classes.catHover}\n            >\n              CATEGORIES\n            </Typography>\n          </Button>\n          {selectedCat && (\n            <>\n              <Fade in>\n                <ChevronRightIcon fontSize=\"large\" />\n              </Fade>\n              <Fade in style={{ transitionDelay: '50ms' }}>\n                <Typography variant=\"h4\">\n                  {selectedCat.toUpperCase()}\n                </Typography>\n              </Fade>\n            </>\n          )}\n        </div>\n\n        <Grid\n          container\n          spacing={4}\n          justify=\"center\"\n          className={classes.gridRoot}\n        >\n          {categories &&\n            !selectedCat &&\n            categories.map((i, idx) => (\n              <Zoom\n                in\n                style={{ transitionDelay: `${idx * 50}ms` }}\n                key={`lb${idx}`}\n              >\n                <Grid item xs={6} sm={4} md={3} lg={2}>\n                  <Button\n                    className={classes.gridBtn}\n                    variant=\"outlined\"\n                    size=\"large\"\n                    key={`lb${idx}`}\n                    onClick={() => setSelectedCat(i)}\n                  >\n                    <Typography variant=\"h5\" className={classes.catBtn}>\n                      {i}\n                    </Typography>\n                  </Button>\n                </Grid>\n              </Zoom>\n            ))}\n\n          {categories.length > 0 && !selectedCat && (\n            <Zoom\n              in\n              style={{\n                transitionDelay: `${categories.length * 50}ms`\n              }}\n            >\n              <Grid item xs={6} sm={4} md={3} lg={2}>\n                <Button\n                  className={classes.gridBtn}\n                  variant=\"outlined\"\n                  size=\"large\"\n                  onClick={() => props.history.push('/products')}\n                >\n                  <Typography variant=\"h5\" className={classes.catBtn}>\n                    See Everything\n                  </Typography>\n                </Button>\n              </Grid>\n            </Zoom>\n          )}\n\n          {subCategories &&\n            selectedCat &&\n            subCategories.map((subCat, idx) => (\n              <Zoom\n                in\n                style={{ transitionDelay: `${idx * 50}ms` }}\n                key={`lb${idx}`}\n              >\n                <Grid item xs={6} sm={4} md={3}>\n                  <Button\n                    className={classes.gridBtn}\n                    variant=\"outlined\"\n                    size=\"large\"\n                    key={`lb${idx}`}\n                    onClick={() =>\n                      props.history.push(\n                        `/products/${selectedCat}/${subCat.name}`\n                      )\n                    }\n                  >\n                    <Typography variant=\"h5\" className={classes.catBtn}>\n                      {subCat.label}\n                    </Typography>\n                  </Button>\n                </Grid>\n              </Zoom>\n            ))}\n\n          {subCategories.length > 0 && selectedCat && (\n            <Zoom\n              in\n              style={{\n                transitionDelay: `${subCategories.length * 50}ms`\n              }}\n            >\n              <Grid item xs={6} sm={4} md={3} lg={2}>\n                <Button\n                  className={classes.gridBtn}\n                  variant=\"outlined\"\n                  size=\"large\"\n                  onClick={() => props.history.push(`/products/${selectedCat}`)}\n                >\n                  <Typography variant=\"h5\" className={classes.catBtn}>\n                    See Everything\n                  </Typography>\n                </Button>\n              </Grid>\n            </Zoom>\n          )}\n        </Grid>\n      </Paper>\n    </>\n  )\n}\n\nexport default withRouter(Landing)\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nimport { darkTheme, lightTheme } from './theme'\nimport { RootState } from './redux'\nimport { PreferencesServiceProps } from './redux/preferences/reducers'\n\nimport DataTable from './components/DataTable'\nimport Landing from './components/Landing'\n\nexport function App(props: PreferencesServiceProps) {\n  const { preferencesService } = props\n  const theme =\n    preferencesService &&\n    preferencesService.preferences &&\n    preferencesService.preferences.dark_mode === 'true'\n      ? darkTheme\n      : lightTheme\n  return (\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      {/* #TODO: add router */}\n      <Router>\n        <Switch>\n          <Route path=\"/products\" exact component={DataTable} />\n          <Route path=\"/products/:cat/\" exact component={DataTable} />\n          <Route path=\"/products/:cat/:subcat\" component={DataTable} />\n          <Route path=\"/\" component={Landing} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\n// export default App\n\nconst mapStateToProps = (states: RootState): PreferencesServiceProps => {\n  return {\n    preferencesService: states.preferences.preferencesService\n  }\n}\n\nexport default connect(mapStateToProps, {})(App)\n","import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { User, LoginError } from '../../types/User'\n\nexport interface UserService {\n  isFetching: boolean\n  user?: User\n  error?: LoginError\n}\n\nexport interface UserServiceProps {\n  userService: UserService\n}\n\nconst userService = (\n  state: UserService = { isFetching: false },\n  action: Action\n): UserService => {\n  switch (action.type) {\n    case 'SET':\n      return { ...state, user: action.user, error: undefined }\n    case 'SET_FETCHING':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR':\n      return { ...state, user: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<UserServiceProps>({\n  userService\n})\n","import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nexport interface PreferencesService {\n  isFetching: boolean\n  preferences?: Preferences\n  error?: PreferencesError\n}\n\nexport interface PreferencesServiceProps {\n  preferencesService: PreferencesService\n}\n\nconst preferencesService = (\n  state: PreferencesService = { isFetching: false },\n  action: Action\n): PreferencesService => {\n  switch (action.type) {\n    case 'SET_PREFERENCES':\n      return { ...state, preferences: action.preferences, error: undefined }\n    case 'SET_FETCHING_PREFERENCES':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR_PREFERENCES':\n      return { ...state, preferences: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<PreferencesServiceProps>({\n  preferencesService\n})\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport session, { UserServiceProps } from './session/reducers'\nimport preferences, { PreferencesServiceProps } from './preferences/reducers'\n\nexport interface RootState {\n  session: UserServiceProps\n  preferences: PreferencesServiceProps\n}\n\nexport default createStore(\n  combineReducers<RootState>({\n    session,\n    preferences\n  }),\n  applyMiddleware(thunk)\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\n\nimport './index.css'\nimport App from './App'\n\nimport store from './redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n)\n\n// import * as serviceWorker from './serviceWorker'\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}