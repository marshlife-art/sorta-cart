{"version":3,"sources":["services/useCartService.ts","appDatabase.ts","components/CartDrawer.tsx","util/utilz.ts","components/DataTable.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["db","cart","version","stores","table","Dexie","useCartService","useState","status","result","setResult","useEffect","toArray","then","line_items","payload","catch","e","error","on","changes","find","change","console","log","getCartItemCount","count","warn","useCartItemCount","itemCount","setItemCount","addToCart","product","line_item","product_id","id","quantity","total","parseFloat","ws_price","selected_unit","add","removeItemFromCart","index","delete","emptyCart","clear","err","updateLineItem","update","TAX_RATE","useStyles","makeStyles","theme","createStyles","root","width","overflowX","height","maxWidth","padding","spacing","borderCollapse","border","qtyinput","usdFormat","num","toFixed","liTotal","u_price","CartTable","props","classes","invoiceSubtotal","map","reduce","sum","i","invoiceTaxes","invoiceTotal","Paper","className","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","idx","key","IconButton","size","onClick","event","fontSize","name","description","pksize","pk","push","join","liPkSize","Select","value","onChange","unit","handleUnitChange","target","margin","MenuItem","unit_type","TextField","type","InputLabelProps","shrink","fullWidth","handleQtyChange","inputProps","min","step","rowSpan","colSpan","length","TableFooter","Button","variant","color","emptyCartAndCloseDrawer","CartDrawer","open","setOpen","cartResult","Drawer","anchor","onClose","window","confirm","API_HOST","PROPERTY_MAP","a","c","d","f","g","k","l","m","og","r","v","w","ft","n","s","y","1","2","3","DataTable","searchExpanded","setSearchExpanded","cartDrawerOpen","setCartDrawerOpen","searchAction","icon","tooltip","isFreeAction","cartAction","Badge","badgeContent","max","actions","setActions","fetch","response","json","setCategoryLookup","categoryLookup","setSubCategoryLookup","subCategoryLookup","columns","title","field","lookup","filterPlaceholder","filtering","CS","EA","render","row","codes","split","code","Chip","label","style","undefined","Tooltip","hidden","data","query","Promise","resolve","reject","method","headers","body","JSON","stringify","page","totalCount","options","headerStyle","position","top","maxBodyHeight","pageSize","pageSizeOptions","debounceInterval","search","emptyRowsWhenPaging","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ovBAOA,IAAMA,EAAK,ICFX,YAGE,aAAe,IAAD,8BACZ,4CAAM,uBAHRC,UAEc,EAEZ,EAAKC,QAAQ,GAAGC,OAAO,CACrBF,KAAM,qBAER,EAAKA,KAAO,EAAKG,MAAM,QALX,EAHhB,2BAAiCC,MDI3BC,EAAiB,WAAO,IAAD,EACCC,mBAAwB,CAClDC,OAAQ,YAFiB,mBACpBC,EADoB,KACZC,EADY,KA8B3B,OA1BAC,qBAAU,WACRX,EAAGC,KACAW,UACAC,MAAK,SAAAC,GAAU,OACdJ,EAAU,CAAEF,OAAQ,SAAUO,QAAS,CAAED,WAAYA,QAEtDE,OAAM,SAAAC,GAELP,EAAU,CAAEF,OAAQ,QAASU,MAAOD,OAGxCjB,EAAGmB,GAAG,WAAW,SAAAC,GACfA,EAAQC,MAAK,SAAAC,GAAM,MAAqB,SAAjBA,EAAOlB,UAC5BJ,EAAGC,KACAW,UACAC,MAAK,SAAAC,GACJS,QAAQC,IAAI,kCACZd,EAAU,CAAEF,OAAQ,SAAUO,QAAS,CAAED,WAAYA,QAEtDE,OAAM,SAAAC,GAELP,EAAU,CAAEF,OAAQ,QAASU,MAAOD,YAG3C,IAEIR,GAGHgB,EAAmB,WACvB,OAAOzB,EAAGC,KAAKyB,QAAQV,OAAM,SAAAC,GAE3B,OADAM,QAAQI,KAAK,mCAAoCV,GAC1C,MAILW,EAAmB,WAAO,IAAD,EACKrB,mBAAS,GADd,mBACtBsB,EADsB,KACXC,EADW,KAY7B,OATAnB,qBAAU,WACRc,IAAmBZ,MAAK,SAAAa,GAAK,OAAII,EAAaJ,MAE9C1B,EAAGmB,GAAG,WAAW,SAAAC,GACfA,EAAQC,MAAK,SAAAC,GAAM,MAAqB,SAAjBA,EAAOlB,UAC5BqB,IAAmBZ,MAAK,SAAAa,GAAK,OAAII,EAAaJ,WAEjD,IAEIG,GAGHE,EAAY,SAACC,GACjB,IAAIC,E,yVAAmB,IAClBD,EADkB,CAErBE,WAAYF,EAAQG,GACpBC,SAAU,EACVC,MAAOC,WAAWN,EAAQO,UAC1BC,cAAe,cAEVP,EAAUE,GAEjBnC,EAAGC,KACAwC,IAAIR,GACJjB,OAAM,SAAAE,GAAK,OAAIK,QAAQI,KAAK,4BAA6BT,OAGxDwB,EAAqB,SAACC,GAC1B3C,EAAGC,KACA2C,OAAOD,GACP3B,OAAM,SAAAE,GAAK,OAAIK,QAAQI,KAAK,qCAAsCT,OAGjE2B,EAAY,WAChB7C,EAAGC,KAAK6C,QAAQ9B,OAAM,SAAS+B,GAC7BxB,QAAQI,KAAK,4BAA6BoB,OAIxCC,EAAiB,SAACf,GACtBjC,EAAGC,KACAgD,OAAOhB,EAAUE,GAAIF,GACrBjB,OAAM,SAAAE,GAAK,OAAIK,QAAQI,KAAK,iCAAkCT,OEhE7DgC,EAAW,IAEXC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,MAAO,OACPC,UAAW,OACXC,OAAQ,QAEVtD,MAAO,CACLuD,SAAU,OACVC,QAASP,EAAMQ,QAAQ,GACvBC,eAAgB,WAChB,OAAQ,CACNC,OAAQ,SAGZC,SAAU,CACRR,MAAO,aAKb,SAASS,EAAUC,GACjB,MACQ,IAAN,OADiB,kBAARA,EACE5B,WAAW4B,GAAKC,QAAQ,GAExBD,EAAIC,QAAQ,IAQ3B,SAASC,EAAQnC,GACf,MAAmC,OAA5BA,EAAUO,eAA0BP,EAAUoC,QACjDpC,EAAUG,SAAWE,WAAWL,EAAUoC,SAC1CpC,EAAUG,SAAWE,WAAWL,EAAUM,UAUhD,SAAS+B,EAAUC,GAMjB,IAAMC,EAAUrB,IAEVsB,EAA2BF,EAAMzD,WAxB1B4D,KAAI,qBAAGrC,SAAmBsC,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,IAAG,GAyB7DC,EAAe5B,EAAWuB,EAC1BM,EAAeD,EAAeL,EAkBpC,OACE,kBAACO,EAAA,EAAD,CAAOC,UAAWT,EAAQjB,MACxB,kBAAC2B,EAAA,EAAD,CAAOD,UAAWT,EAAQpE,MAAO+E,aAAW,QAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,WACjB,kBAACD,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,WAGJ,kBAACC,EAAA,EAAD,KACGjB,EAAMzD,WAAW4D,KAAI,SAACzC,EAAWwD,GAAZ,OACpB,kBAACJ,EAAA,EAAD,CAAUK,IAAG,YAAOD,IAClB,kBAACH,EAAA,EAAD,CAAWC,MAAM,UACf,kBAACI,EAAA,EAAD,CACER,aAAW,SACXS,KAAK,QACLC,QAAS,SAACC,GAAD,OAxBD3D,EAwBgCF,EAAUE,QAvBhEO,EAAmBP,GADE,IAACA,IA0BR,kBAAC,IAAD,CAAW4D,SAAS,cAGxB,kBAACT,EAAA,EAAD,KACGrD,EAAU+D,KADb,IACoB/D,EAAUgE,aAE9B,kBAACX,EAAA,EAAD,CAAWC,MAAM,SACf,6BAC+B,OAA5BtD,EAAUO,eAA0BP,EAAUoC,QAC3CJ,EAAUhC,EAAUoC,SACpBJ,EAAUhC,EAAUM,WAE1B,6BArEhB,SAAkBN,GAChB,IAAMiE,EAAS,GAGf,OAFAjE,EAAUkE,IAAuB,IAAjBlE,EAAUkE,IAAYD,EAAOE,KAAKnE,EAAUkE,IAC5DlE,EAAU2D,MAAQM,EAAOE,KAAKnE,EAAU2D,MACjCM,EAAOG,KAAK,OAiECC,CAASrE,KAEjB,kBAACqD,EAAA,EAAD,CAAWC,MAAM,UACdtD,EAAUoC,SACXpC,EAAUoC,UAAYpC,EAAUM,SAC9B,kBAACgE,EAAA,EAAD,CACEC,MAAOvE,EAAUO,cACjBiE,SAAU,SAACX,GAAD,OAzDH,SAAC7D,EAAqByE,GAC7CzE,EAAUO,cAAgBkE,EAC1BzE,EAAUI,MAAQ+B,EAAQnC,GAC1Be,EAAef,GAuDG0E,CAAiB1E,EAAW6D,EAAMc,OAAOJ,QAE3CK,OAAO,SAEP,kBAACC,EAAA,EAAD,CAAUN,MAAM,MAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,MAAhB,SAEwB,OAAxBvE,EAAU8E,UACZ,OAEA,QAGJ,kBAACzB,EAAA,EAAD,CAAWC,MAAM,SACf,kBAACyB,EAAA,EAAD,CACE/B,UAAWT,EAAQR,SACnBiD,KAAK,SACLC,gBAAiB,CACfC,QAAQ,GAEVN,OAAO,QACPO,WAAS,EACTZ,MAAOvE,EAAUG,SACjBqE,SAAU,SAACX,GAAD,OA3EF,SAAC7D,EAAqBG,GAC5CH,EAAUG,SAAWA,EAAW,EAAIA,EAAW,EAC/CH,EAAUI,MAAQ+B,EAAQnC,GAC1Be,EAAef,GAyECoF,CAAgBpF,EAAW6D,EAAMc,OAAOJ,QAE1Cc,WAAY,CAAEC,IAAK,IAAKC,KAAM,QAGlC,kBAAClC,EAAA,EAAD,CAAWC,MAAM,SAAStB,EAAUhC,EAAUI,YAGlD,kBAACgD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWmC,QAAS,EAAGC,QAAS,IAChC,kBAACpC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UACdhB,EAAMzD,YAAcyD,EAAMzD,WAAW6G,QAExC,kBAACrC,EAAA,EAAD,CAAWC,MAAM,SAAStB,EAAUQ,KAEtC,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UAAjB,WAA0C,IAAXrC,GAAgBiB,QAC7C,GADF,OAGA,kBAACmB,EAAA,EAAD,CAAWC,MAAM,SAAStB,EAAUa,KAEtC,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,QAAQmC,QAAS,GAChC,2BAAIzD,EAAUc,OAIpB,kBAAC6C,EAAA,EAAD,KACE,kBAACvC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWoC,QAAS,EAAGnC,MAAM,QAC3B,kBAACsC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNlC,QAAStB,EAAMyD,yBAHjB,eAQF,kBAAC1C,EAAA,EAAD,CAAWoC,QAAS,EAAGnC,MAAM,SAC3B,kBAACsC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,WAAlC,iBAsCCE,OA3Bf,SAAoB1D,GAAyB,IACnC2D,EAAkB3D,EAAlB2D,KAAMC,EAAY5D,EAAZ4D,QACRC,EAAa9H,IAWnB,OACE,kBAAC+H,EAAA,EAAD,CAAQC,OAAO,QAAQJ,KAAMA,EAAMK,QAAS,kBAAMJ,GAASD,KAClC,WAAtBE,EAAW5H,QAAuB,aACZ,WAAtB4H,EAAW5H,QACV4H,EAAWrH,QAAQD,WAAW6G,OAAS,GACrC,kBAACrD,EAAD,CACExD,WAAYsH,EAAWrH,QAAQD,WAC/BkH,wBAhBsB,SAC9BlC,GAEI0C,OAAOC,QAAQ,mBACjB5F,IACAsF,GAAQ,SCzMP,IAAMO,GAEP,4BCrBAC,GAA4C,CAChDC,EAAG,yBACHC,EAAG,WACHC,EAAG,aACHC,EAAG,qBACHC,EAAG,cACHC,EAAG,SACHC,EAAG,qBACHC,EAAG,2BACHC,GAAI,UACJC,EAAG,gBACHC,EAAG,QACHC,EAAG,aACHC,GAAI,aACJC,EAAG,UACHC,EAAG,iBACHC,EAAG,aACHC,EAAG,eACHC,EAAG,eACHC,EAAG,gBA+LUC,OA3Kf,WACE,IAAMlI,EAAYD,IADC,EAGyBrB,oBAAS,GAHlC,mBAGZyJ,EAHY,KAGIC,EAHJ,OAKyB1J,oBAAS,GALlC,mBAKZ2J,EALY,KAKIC,EALJ,KAObC,EAAe,CACnBC,KAAML,EAAiB,WAAa,SACpCM,QAASN,EAAiB,eAAiB,SAC3CO,cAAc,EACd1E,QAAS,kBAAMoE,GAAmBD,KAG9BQ,EAAa,CACjBH,KAAM,kBACJ,kBAACI,EAAA,EAAD,CAAOC,aAAc7I,EAAW8I,IAAK,GAAI5C,MAAM,WAC7C,kBAAC,IAAD,QAGJuC,QAAS,OACTC,cAAc,EACd1E,QAAS,kBAAMsE,GAAmBD,KAtBjB,EAwBW3J,mBAAwB,CAAC6J,IAxBpC,mBAwBZQ,EAxBY,KAwBHC,EAxBG,KA0BnBlK,qBAAU,WAENkK,EADEhJ,EACS,CAACuI,EAAcI,GAEf,CAACJ,MAGb,CAACJ,EAAgBnI,IAjCD,MAmCyBtB,oBAAiB,WAC3DuK,MAAM,GAAD,OAAIpC,GAAJ,gBACF7H,MAAK,SAAAkK,GAAQ,OAAIA,EAASC,UAC1BnK,MAAK,SAAAJ,GAAM,OAAIwK,EAAkBxK,SAtCnB,mBAmCZyK,EAnCY,KAmCID,EAnCJ,OAyC+B1K,oBAAiB,WACjEuK,MAAM,GAAD,OAAIpC,GAAJ,oBACF7H,MAAK,SAAAkK,GAAQ,OAAIA,EAASC,UAC1BnK,MAAK,SAAAJ,GAAM,OAAI0K,EAAqB1K,SA5CtB,mBAyCZ2K,EAzCY,KAyCOD,EAzCP,KA+CnB,OACE,oCACE,kBAAC,IAAD,CACEE,QAAS,CACP,CACEC,MAAO,WACPC,MAAO,WACPtE,KAAM,SACNuE,OAAQN,EACRO,kBAAmB,UAErB,CACEH,MAAO,eACPC,MAAO,eACPtE,KAAM,SACNuE,OAAQJ,EACRK,kBAAmB,UAErB,CAAEH,MAAO,OAAQC,MAAO,OAAQtE,KAAM,SAAUyE,WAAW,GAC3D,CACEJ,MAAO,cACPC,MAAO,cACPtE,KAAM,SACNyE,WAAW,GAEb,CACEJ,MAAO,KACPC,MAAO,KACPtE,KAAM,UACNyE,WAAW,GAEb,CAAEJ,MAAO,OAAQC,MAAO,OAAQtE,KAAM,SAAUyE,WAAW,GAC3D,CACEJ,MAAO,YACPC,MAAO,YACPtE,KAAM,SACNuE,OAAQ,CAAEG,GAAI,OAAQC,GAAI,QAC1BH,kBAAmB,UAErB,CACEH,MAAO,QACPC,MAAO,WACPtE,KAAM,WACNyE,WAAW,GAEb,CACEJ,MAAO,aACPC,MAAO,UACPtE,KAAM,WACNyE,WAAW,GAEb,CACEJ,MAAO,aACPC,MAAO,QACPtE,KAAM,SACNuE,OAAQ7C,GACR8C,kBAAmB,SACnBI,OAAQ,SAAAC,GAAG,OAAgBA,EAAIC,MAvHtCC,MAAM,MACNtH,KAAI,SAACuH,EAAMxG,GAAP,OACHkD,GAAasD,GACX,kBAACC,EAAA,EAAD,CACEC,MAAOxD,GAAasD,GACpBG,MAAO,CAAEvF,OAAQ,GACjBjB,KAAK,QACLF,IAAG,eAAUD,KAGf,QA+GE,CACE6F,WAAOe,EACPd,WAAOc,EACPpF,KAAM,SACN4E,OAAQ,SAAAC,GACN,IACMK,EACF,uBAEJ,OACE,kBAACG,EAAA,EAAD,CAASnH,aAAYgH,EAAOb,MAAOa,GACjC,kBAACxG,EAAA,EAAD,CAAYoC,MAAM,UAAUlC,QAAS,kBAAM9D,EAAU+J,KAEjD,kBAAC,IAAD,UASZ,CAAER,MAAO,MAAOC,MAAO,WAAYtE,KAAM,SAAUsF,QAAQ,GAE3D,CAAEjB,MAAO,KAAMC,MAAO,KAAMtE,KAAM,SAAUsF,QAAQ,IAEtDC,KAAM,SAAAC,GAAK,OACT,IAAIC,SAAQ,SAACC,EAASC,GACpBrL,QAAQC,IAAI,SAAUiL,GACtB3B,MAAM,GAAD,OAAIpC,GAAJ,aAAyB,CAC5BmE,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUR,KAEpB5L,MAAK,SAAAkK,GAAQ,OAAIA,EAASC,UAC1BnK,MAAK,SAAAJ,GACJc,QAAQC,IAAI,SAAUf,GACtBkM,EAAQlM,MAETO,OAAM,SAAA+B,GAEL,OADAxB,QAAQI,KAAK,oBAAqBoB,GAC3B4J,EAAQ,CAAEH,KAAM,GAAIU,KAAM,EAAGC,WAAY,WAIxD7B,MAAM,aACN8B,QAAS,CACPC,YAAa,CAAEC,SAAU,SAAUC,IAAK,GACxCC,cAAe,sBACfC,SAAU,GACVC,gBAAiB,CAAC,GAAI,IAAK,KAC3BC,iBAAkB,IAClBjC,WAAW,EACXkC,OAAQ5D,EACR6D,qBAAqB,GAEvBjD,QAASA,IAEX,kBAAC,GAAD,CAAY1C,KAAMgC,EAAgB/B,QAASgC,MCnNlC2D,GAJO,WACpB,OAAO,kBAAC,GAAD,OCOWC,QACW,cAA7BvF,OAAOwF,SAASC,UAEe,UAA7BzF,OAAOwF,SAASC,UAEhBzF,OAAOwF,SAASC,SAASC,MACvB,2DCZNC,IAAStC,OAAO,kBAAC,GAAD,MAASuC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3N,MAAK,SAAA4N,GACjCA,EAAaC,kB","file":"static/js/main.fcd2fc2d.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\nimport { AppDatabase } from '../appDatabase'\nimport { Service } from '../types/Service'\nimport { Cart } from '../types/Cart'\nimport { LineItem, Product } from '../types/Product'\n\nconst db = new AppDatabase()\n\nconst useCartService = () => {\n  const [result, setResult] = useState<Service<Cart>>({\n    status: 'loading'\n  })\n  useEffect(() => {\n    db.cart\n      .toArray()\n      .then(line_items =>\n        setResult({ status: 'loaded', payload: { line_items: line_items } })\n      )\n      .catch(e => {\n        // console.warn('[useCartService] caught error:', e)\n        setResult({ status: 'error', error: e })\n      })\n\n    db.on('changes', changes => {\n      changes.find(change => change.table === 'cart') &&\n        db.cart\n          .toArray()\n          .then(line_items => {\n            console.log('[useCartService] db changes!! ')\n            setResult({ status: 'loaded', payload: { line_items: line_items } })\n          })\n          .catch(e => {\n            // console.warn('[useCartService] caught error:', e)\n            setResult({ status: 'error', error: e })\n          })\n    })\n  }, [])\n\n  return result\n}\n\nconst getCartItemCount = () => {\n  return db.cart.count().catch(e => {\n    console.warn('[useCartItemCount] caught error:', e)\n    return 0\n  })\n}\n\nconst useCartItemCount = () => {\n  const [itemCount, setItemCount] = useState(0)\n\n  useEffect(() => {\n    getCartItemCount().then(count => setItemCount(count))\n\n    db.on('changes', changes => {\n      changes.find(change => change.table === 'cart') &&\n        getCartItemCount().then(count => setItemCount(count))\n    })\n  }, [])\n\n  return itemCount\n}\n\nconst addToCart = (product: Product) => {\n  let line_item: LineItem = {\n    ...product,\n    product_id: product.id,\n    quantity: 1,\n    total: parseFloat(product.ws_price),\n    selected_unit: 'CS'\n  }\n  delete line_item.id // delete id field that moved to product_id so indexDB will auto-increment and so cart items will order correctly.\n\n  db.cart\n    .add(line_item)\n    .catch(error => console.warn('[addToCart] caught error:', error))\n}\n\nconst removeItemFromCart = (index: number) => {\n  db.cart\n    .delete(index)\n    .catch(error => console.warn('[removeItemFromCart] caught error:', error))\n}\n\nconst emptyCart = () => {\n  db.cart.clear().catch(function(err) {\n    console.warn('[emptyCart] caught error:', err)\n  })\n}\n\nconst updateLineItem = (line_item: LineItem) => {\n  db.cart\n    .update(line_item.id, line_item)\n    .catch(error => console.warn('[updateLineItem] caught error:', error))\n}\n\nexport {\n  useCartService,\n  useCartItemCount,\n  addToCart,\n  removeItemFromCart,\n  emptyCart,\n  updateLineItem\n}\n","import Dexie from 'dexie'\nimport 'dexie-observable'\n\nimport { LineItem } from './types/Product'\n\nexport class AppDatabase extends Dexie {\n  cart: Dexie.Table<LineItem, number>\n\n  constructor() {\n    super('SortaCartDatabase')\n    this.version(1).stores({\n      cart: '++id,&product_id'\n    })\n    this.cart = this.table('cart')\n  }\n}\n","import React from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear'\n\nimport {\n  useCartService,\n  emptyCart,\n  updateLineItem,\n  removeItemFromCart\n} from '../services/useCartService'\nimport { LineItem } from '../types/Product'\n\ninterface CartDrawerProps {\n  open: boolean\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst TAX_RATE = 0.07\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      overflowX: 'auto',\n      height: '100%'\n    },\n    table: {\n      maxWidth: '95vw',\n      padding: theme.spacing(1),\n      borderCollapse: 'separate',\n      '& td': {\n        border: 'none'\n      }\n    },\n    qtyinput: {\n      width: '50px'\n    }\n  })\n)\n\nfunction usdFormat(num: number | string) {\n  if (typeof num === 'string') {\n    return `$${parseFloat(num).toFixed(2)}`\n  } else {\n    return `$${num.toFixed(2)}`\n  }\n}\n\nfunction subtotal(items: LineItem[]) {\n  return items.map(({ total }) => total).reduce((sum, i) => sum + i, 0)\n}\n\nfunction liTotal(line_item: LineItem): number {\n  return line_item.selected_unit === 'EA' && line_item.u_price\n    ? line_item.quantity * parseFloat(line_item.u_price)\n    : line_item.quantity * parseFloat(line_item.ws_price)\n}\n\nfunction liPkSize(line_item: LineItem): string {\n  const pksize = []\n  line_item.pk && line_item.pk !== 1 && pksize.push(line_item.pk)\n  line_item.size && pksize.push(line_item.size)\n  return pksize.join(' / ')\n}\n\nfunction CartTable(props: {\n  line_items: LineItem[]\n  emptyCartAndCloseDrawer: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void\n}) {\n  const classes = useStyles()\n\n  const invoiceSubtotal = subtotal(props.line_items)\n  const invoiceTaxes = TAX_RATE * invoiceSubtotal\n  const invoiceTotal = invoiceTaxes + invoiceSubtotal\n\n  const handleUnitChange = (line_item: LineItem, unit: string) => {\n    line_item.selected_unit = unit\n    line_item.total = liTotal(line_item)\n    updateLineItem(line_item)\n  }\n\n  const handleQtyChange = (line_item: LineItem, quantity: number) => {\n    line_item.quantity = quantity > 0 ? quantity : 1\n    line_item.total = liTotal(line_item)\n    updateLineItem(line_item)\n  }\n\n  const removeLineItem = (id: number) => {\n    removeItemFromCart(id)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"cart\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"></TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"center\">Price</TableCell>\n            <TableCell align=\"center\">Unit</TableCell>\n            <TableCell align=\"center\">Qty.</TableCell>\n            <TableCell align=\"center\">Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.line_items.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <IconButton\n                  aria-label=\"delete\"\n                  size=\"small\"\n                  onClick={(event: any) => removeLineItem(line_item.id)}\n                >\n                  <ClearIcon fontSize=\"inherit\" />\n                </IconButton>\n              </TableCell>\n              <TableCell>\n                {line_item.name} {line_item.description}\n              </TableCell>\n              <TableCell align=\"right\">\n                <div>\n                  {line_item.selected_unit === 'EA' && line_item.u_price\n                    ? usdFormat(line_item.u_price)\n                    : usdFormat(line_item.ws_price)}\n                </div>\n                <div>{liPkSize(line_item)}</div>\n              </TableCell>\n              <TableCell align=\"center\">\n                {line_item.u_price &&\n                line_item.u_price !== line_item.ws_price ? (\n                  <Select\n                    value={line_item.selected_unit}\n                    onChange={(event: any) =>\n                      handleUnitChange(line_item, event.target.value)\n                    }\n                    margin=\"dense\"\n                  >\n                    <MenuItem value=\"CS\">Case</MenuItem>\n                    <MenuItem value=\"EA\">Each</MenuItem>\n                  </Select>\n                ) : line_item.unit_type === 'CS' ? (\n                  'Case'\n                ) : (\n                  'Each'\n                )}\n              </TableCell>\n              <TableCell align=\"right\">\n                <TextField\n                  className={classes.qtyinput}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.quantity}\n                  onChange={(event: any) =>\n                    handleQtyChange(line_item, event.target.value)\n                  }\n                  inputProps={{ min: '1', step: '1' }}\n                />\n              </TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell rowSpan={3} colSpan={3} />\n            <TableCell>Subtotal</TableCell>\n            <TableCell align=\"center\">\n              {props.line_items && props.line_items.length}\n            </TableCell>\n            <TableCell align=\"right\">{usdFormat(invoiceSubtotal)}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Tax</TableCell>\n            <TableCell align=\"center\">{`${(TAX_RATE * 100).toFixed(\n              0\n            )} %`}</TableCell>\n            <TableCell align=\"right\">{usdFormat(invoiceTaxes)}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Total</TableCell>\n            <TableCell align=\"right\" colSpan={2}>\n              <b>{usdFormat(invoiceTotal)}</b>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TableCell colSpan={3} align=\"left\">\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={props.emptyCartAndCloseDrawer}\n              >\n                Empty Cart\n              </Button>\n            </TableCell>\n            <TableCell colSpan={3} align=\"right\">\n              <Button variant=\"contained\" color=\"primary\">\n                Checkout\n              </Button>\n            </TableCell>\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </Paper>\n  )\n}\n\nfunction CartDrawer(props: CartDrawerProps) {\n  const { open, setOpen } = props\n  const cartResult = useCartService()\n\n  const emptyCartAndCloseDrawer = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    if (window.confirm('Are you sure?')) {\n      emptyCart()\n      setOpen(false)\n    }\n  }\n\n  return (\n    <Drawer anchor=\"right\" open={open} onClose={() => setOpen(!open)}>\n      {cartResult.status !== 'loaded' && 'Loading...'}\n      {cartResult.status === 'loaded' &&\n        cartResult.payload.line_items.length > 0 && (\n          <CartTable\n            line_items={cartResult.payload.line_items}\n            emptyCartAndCloseDrawer={emptyCartAndCloseDrawer}\n          />\n        )}\n    </Drawer>\n  )\n}\n\nexport default CartDrawer\n","import { PaymentStatus, ShipmentStatus } from '../types/Order'\n\nexport const ORDER_PAYMENT_STATUSES: PaymentStatus[] = [\n  'balance_due',\n  'credit_owed',\n  'failed',\n  'paid',\n  'void'\n]\n\nexport const ORDER_SHIPMENT_STATUSES: ShipmentStatus[] = [\n  'backorder',\n  'canceled',\n  'partial',\n  'pending',\n  'ready',\n  'shipped'\n]\n\nexport function dateMinSec(): string {\n  const date = new Date()\n  return `${date.getMinutes()}${date.getSeconds()}`\n}\n\n// export function tryGetDateTime(id: string) {\n//   try {\n//     return new Date(parseInt(id)).toLocaleString()\n//   } catch (e) {\n//     console.warn('tryGetDateTime caught error:', e)\n//     return ''\n//   }\n// }\n\nexport const API_HOST: string =\n  process.env.NODE_ENV === 'production'\n    ? 'https://api.marshcoop.org'\n    : 'http://localhost:3000'\n","import React, { useState, useEffect } from 'react'\nimport MaterialTable, { Action } from 'material-table'\nimport { Chip } from '@material-ui/core'\nimport Badge from '@material-ui/core/Badge'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart'\nimport RemoveShoppingCartIcon from '@material-ui/icons/RemoveShoppingCart'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport CartDrawer from './CartDrawer'\nimport { useCartItemCount, addToCart } from '../services/useCartService'\nimport { API_HOST } from '../util/utilz'\n\nconst PROPERTY_MAP: { [index: string]: string } = {\n  a: 'Artificial ingredients',\n  c: 'Low carb',\n  d: 'Dairy free',\n  f: 'Food Service items',\n  g: 'Gluten free',\n  k: 'Kosher',\n  l: 'Low sodium/no salt',\n  m: 'Non-GMO Project Verified',\n  og: 'Organic',\n  r: 'Refined sugar',\n  v: 'Vegan',\n  w: 'Wheat free',\n  ft: 'Fair Trade',\n  n: 'Natural',\n  s: 'Specialty Only',\n  y: 'Yeast free',\n  1: '100% organic',\n  2: '95%+ organic',\n  3: '70%+ organic'\n}\n\nfunction renderCodes(codes: string) {\n  return codes\n    .split(', ')\n    .map((code, idx) =>\n      PROPERTY_MAP[code] ? (\n        <Chip\n          label={PROPERTY_MAP[code]}\n          style={{ margin: 5 }}\n          size=\"small\"\n          key={`pprop${idx}`}\n        />\n      ) : (\n        ''\n      )\n    )\n}\n\nfunction DataTable() {\n  const itemCount = useCartItemCount()\n\n  const [searchExpanded, setSearchExpanded] = useState(false)\n\n  const [cartDrawerOpen, setCartDrawerOpen] = useState(false)\n\n  const searchAction = {\n    icon: searchExpanded ? 'zoom_out' : 'search',\n    tooltip: searchExpanded ? 'Close Search' : 'Search',\n    isFreeAction: true,\n    onClick: () => setSearchExpanded(!searchExpanded)\n  }\n\n  const cartAction = {\n    icon: () => (\n      <Badge badgeContent={itemCount} max={99} color=\"primary\">\n        <ShoppingCartIcon />\n      </Badge>\n    ),\n    tooltip: 'Cart',\n    isFreeAction: true,\n    onClick: () => setCartDrawerOpen(!cartDrawerOpen)\n  }\n  const [actions, setActions] = useState<Action<any>[]>([searchAction])\n\n  useEffect(() => {\n    if (itemCount) {\n      setActions([searchAction, cartAction])\n    } else {\n      setActions([searchAction])\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchExpanded, itemCount]) // note: adding 'cartAction' and 'searchAction' to dep array is not pleasant :/\n\n  const [categoryLookup, setCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/categories`)\n      .then(response => response.json())\n      .then(result => setCategoryLookup(result))\n  })\n\n  const [subCategoryLookup, setSubCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/sub_categories`)\n      .then(response => response.json())\n      .then(result => setSubCategoryLookup(result))\n  })\n\n  return (\n    <>\n      <MaterialTable\n        columns={[\n          {\n            title: 'category',\n            field: 'category',\n            type: 'string',\n            lookup: categoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'sub category',\n            field: 'sub_category',\n            type: 'string',\n            lookup: subCategoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          { title: 'name', field: 'name', type: 'string', filtering: false },\n          {\n            title: 'description',\n            field: 'description',\n            type: 'string',\n            filtering: false\n          },\n          {\n            title: 'pk',\n            field: 'pk',\n            type: 'numeric',\n            filtering: false\n          },\n          { title: 'size', field: 'size', type: 'string', filtering: false },\n          {\n            title: 'unit type',\n            field: 'unit_type',\n            type: 'string',\n            lookup: { CS: 'Case', EA: 'Each' },\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'price',\n            field: 'ws_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: 'unit price',\n            field: 'u_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: 'properties',\n            field: 'codes',\n            type: 'string',\n            lookup: PROPERTY_MAP,\n            filterPlaceholder: 'filter',\n            render: row => renderCodes(row.codes)\n          },\n          {\n            title: undefined,\n            field: undefined,\n            type: 'string',\n            render: row => {\n              const inCart = true\n              const label = inCart\n                ? 'add to shopping cart'\n                : 'remove from shopping cart'\n              return (\n                <Tooltip aria-label={label} title={label}>\n                  <IconButton color=\"primary\" onClick={() => addToCart(row)}>\n                    {inCart ? (\n                      <AddShoppingCartIcon />\n                    ) : (\n                      <RemoveShoppingCartIcon />\n                    )}\n                  </IconButton>\n                </Tooltip>\n              )\n            }\n          },\n          { title: 'upc', field: 'upc_code', type: 'string', hidden: true },\n          // { title: 'unf', field: 'unf', type: 'string' },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            console.log('query:', query)\n            fetch(`${API_HOST}/products`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                console.log('result', result)\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"sorta-cart\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 133px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: searchExpanded,\n          emptyRowsWhenPaging: false\n        }}\n        actions={actions}\n      />\n      <CartDrawer open={cartDrawerOpen} setOpen={setCartDrawerOpen} />\n    </>\n  )\n}\n\nexport default DataTable\n","import React from 'react'\n\nimport DataTable from './components/DataTable'\n\nconst App: React.FC = () => {\n  return <DataTable />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}